# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

LOG_PREFIX=dataset

AUTHORIZE_API=${ENTITLEMENTS_BASE_URL}/api/entitlements/v2
STORAGE_API=${STORAGE_BASE_URL}/api/storage/v2
SCHEMA_API=${SCHEMA_BASE_URL}/api/schema-service/v1
#Use this for local dev, on K8S, the service mesh handles this
DMS_API_BASE=${DMS_BASE_URL:}

server.servlet.contextPath=/api/dataset/v1/
logging.level.org.springframework.web=${LOG_LEVEL:INFO}
server.port=${APPLICATION_PORT:8080}

## AWS DynamoDB configuration
aws.dynamodb.key=kind
aws.dynamodb.table.prefix=${ENVIRONMENT}-
aws.dynamodb.endpoint=dynamodb.${AWS_REGION}.amazonaws.com

## AWS S3 configuration
aws.region=${AWS_REGION}
# aws.s3.endpoint=s3.${AWS_REGION}.amazonaws.com
# aws.s3.max-record-threads=2000
# aws.s3.enable-https=true
# S3_DATA_BUCKET=""

## AWS ElastiCache configuration
aws.elasticache.cluster.endpoint=${CACHE_CLUSTER_ENDPOINT:null}
aws.elasticache.cluster.port=${CACHE_CLUSTER_PORT:null}
aws.elasticache.cluster.key=${CACHE_CLUSTER_KEY:null}

# aws.ssm=${SSM_ENABLED}
aws.parameter.prefix=/osdu/${ENVIRONMENT}

# aws.sns.topic.arn=${aws.parameter.prefix}/storage/storage-sns-topic-arn
# aws.sns.s3.bucket-name=${aws.parameter.prefix}/storage/storage-s3-bucket-name

# if this is turned on then the service tries to connect to elastic search
management.health.elasticsearch.enabled=false

server.ssl.enabled=${SSL_ENABLED:true}
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${SSL_KEY_STORE_PATH:/certs/osduonaws.p12}
server.ssl.key-alias=${SSL_KEY_ALIAS:osduonaws}
server.ssl.key-password=${SSL_KEY_PASSWORD:}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:}

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration