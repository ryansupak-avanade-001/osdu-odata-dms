apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "{{ .Values.conf.appName }}"
  name: "{{ .Values.conf.appName }}"
  namespace: "{{ .Release.Namespace }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.conf.appName }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Values.conf.appName }}"
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
      - name: "{{ .Values.conf.appName }}"
        image: "{{ .Values.data.image }}"
        imagePullPolicy: "{{ .Values.data.imagePullPolicy }}"
        envFrom:
        - configMapRef:
            name: "{{ .Values.conf.configmap }}"
        {{- if .Values.conf.onPremEnabled }}
        - secretRef:
            name: "{{ .Values.conf.postgresSecretName }}"
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "{{ .Values.data.requestsCpu }}"
            memory: "{{ .Values.data.requestsMemory }}"
          limits:
            cpu: "{{ .Values.data.limitsCpu }}"
            memory: "{{ .Values.data.limitsMemory }}"
      serviceAccountName: "{{ .Values.data.serviceAccountName }}"
